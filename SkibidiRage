local fpsmode = "Skibidi"
local fps = 10000
local fpsFloor = 5000

local player = game.Players.LocalPlayer
local camera = game.Workspace.CurrentCamera
local gui = Instance.new("ScreenGui")
gui.Parent = player:WaitForChild("PlayerGui")

local watermark = Instance.new("TextLabel")
watermark.Parent = gui
watermark.AnchorPoint = Vector2.new(0.5, 0)
watermark.Position = UDim2.new(0.5, 0, 0, 10)
watermark.Size = UDim2.new(0, 300, 0, 50)
watermark.BackgroundTransparency = 1
watermark.TextScaled = true
watermark.Font = Enum.Font.SourceSansBold
watermark.TextStrokeTransparency = 0
watermark.TextStrokeColor3 = Color3.new(0, 0, 0)
watermark.TextColor3 = Color3.new(1, 1, 1) -- Set initial text color to white

local function updateWatermark()
    while true do
        local time = os.date("%H:%M:%S")
        watermark.Text = "Subscribe to IgnoreDev | Time: " .. time
        wait(1)
    end
end

local function rainbowText()
    local hue = 0
    while true do
        hue = hue + (1 / 120)
        if hue >= 1 then
            hue = 0
        end
        local color = Color3.fromHSV(hue, 1, 1)
        watermark.TextColor3 = color
        wait(1 / 60)
    end
end

local function calculateFPS()
    local frames = 0
    game:GetService("RunService").RenderStepped:Connect(function(deltaTime)
        frames = frames + 1
        if frames >= 30 then
            fps = math.floor(1 / deltaTime)
            fpsFloor = math.floor(fps)
            frames = 0
        end
    end)
end

local function optimizeGraphics(enable)
    if enable then
        local lighting = game:GetService("Lighting")
        lighting.GlobalShadows = false
        lighting.FogEnd = 9e9
        lighting.Brightness = 0
        lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
        settings().Rendering.QualityLevel = Enum.QualityLevel.Level01
        settings().Rendering.FrameSkipLevel = 0
        settings().Rendering.EnableFRM = true
        settings().Rendering.ShadowLevel = 0
    else
        local lighting = game:GetService("Lighting")
        lighting.GlobalShadows = true
        lighting.Brightness = 2
        lighting.FogEnd = 100000
        lighting.OutdoorAmbient = Color3.fromRGB(255, 255, 255)
        settings().Rendering.QualityLevel = Enum.QualityLevel.Automatic
        settings().Rendering.ShadowLevel = 1
    end
end

local function removeCharacterAccessories(character)
    for _, item in pairs(character:GetChildren()) do
        if item:IsA("Shirt") or item:IsA("Pants") or item:IsA("Accessory") or item:IsA("Hair") then
            item:Destroy()
        end
    end
end

local function applySkibidiMode()
    local character = player.Character or player.CharacterAdded:Wait()
    removeCharacterAccessories(character)
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("BasePart") then
            obj.Material = Enum.Material.SmoothPlastic -- Set all parts to SmoothPlastic
        end
    end
end

local function applyRageMode()
    local lighting = game:GetService("Lighting")
    lighting.GlobalShadows = false
    settings().Rendering.QualityLevel = Enum.QualityLevel.Level01
    settings().Rendering.ShadowLevel = 0
    settings().Rendering.UseHighQualityDOF = false
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("ParticleEmitter") or obj:IsA("Trail") or obj:IsA("Smoke") or obj:IsA("Fire") or obj:IsA("Sparkles") then
            obj:Destroy()
        end
    end
end

local function applyFpsMode(mode)
    if mode == "Skibidi" then
        applySkibidiMode()
        optimizeGraphics(true)
    elseif mode == "Rage" then
        applyRageMode()
        optimizeGraphics(true)
    else
        print("Invalid mode selected")
    end
end

applyFpsMode(fpsmode)

calculateFPS()

spawn(updateWatermark)
spawn(rainbowText)

local function onCharacterAdded(character)
    wait(1) -- Wait for the character to fully load
    removeCharacterAccessories(character)
    applyFpsMode(fpsmode)

    character:WaitForChild("Humanoid").Died:Connect(function()
        wait(1) -- Delay to allow respawn
        removeCharacterAccessories(character)
    end)
end

player.CharacterAdded:Connect(onCharacterAdded)

local function smoothCameraMovement()
    local runService = game:GetService("RunService")
    local camera = game.Workspace.CurrentCamera

    runService.RenderStepped:Connect(function()
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local targetPosition = player.Character.HumanoidRootPart.Position + Vector3.new(0, 2, 5)
            camera.CFrame = camera.CFrame:Lerp(CFrame.new(targetPosition), 0.05) -- Increased smoothness
        end
    end)
end

smoothCameraMovement()

-- Initial call to handle the current character if it exists
if player.Character then
    onCharacterAdded(player.Character)
end
