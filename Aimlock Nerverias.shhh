-- Load the UI Library
local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/laagginq/ui-libraries/main/shit-lib/src.lua"))()

-- UI Setup
local win = lib:Create("Nerverias.shhh","Da hood,Southwest Florida")
local a = win:tab("Camlock",true)
local b = win:tab("Aimlock",false)
local c = win:tab("Fly & Speed",false)
local d = win:tab("UpdateLog",false)

a:label("Camlock")

-- Smoothness Input
a:input("Smoothness", tostring(getgenv().Smoothness), true, function(v)
    getgenv().Smoothness = tonumber(v)
    print("Smoothness set to: " .. v)
end)

-- AimPart Input Textbox
a:input("AimPart", getgenv().AimPart, false, function(v)
    getgenv().AimPart = tostring(v)
    print("AimPart set to: " .. v)
end)

a:input("Prediction X", tostring(getgenv().PredictionX), true, function(v)
    getgenv().PredictionX = tonumber(v)
    print("Prediction X set to: " .. v)
end)

-- Prediction Y Input
a:input("Prediction Y", tostring(getgenv().PredictionY), true, function(v)
    getgenv().PredictionY = tonumber(v)
    print("Prediction Y set to: " .. v)
end)

-- Enable Camlock Button
a:button("Enable Camlock", function()
    -- Configuration 
getgenv().AimlockEnabled = true
getgenv().AimPart = "HumanoidRootPart"  -- Set to HumanoidRootPart
getgenv().PredictionX = 0.165
getgenv().PredictionY = 0.165
getgenv().Smoothness = 5  -- Controls the lerp smoothness (higher = smoother)
getgenv().Airshot = true
getgenv().Notification = true
getgenv().KoCheck = true  -- Stops camlock when the target's health is 1 or below
getgenv().Keybind = "c"   -- Configurable keybind for toggling camlock

-- Services
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local camera = game.Workspace.CurrentCamera

-- Variables
local lockedTarget
local aimEnabled = false

-- Function to notify the player
local function sendNotification(message)
    if getgenv().Notification then
        game.StarterGui:SetCore("SendNotification", {
            Title = "Nerverias.shhh",
            Text = message,
            Duration = 5
        })
    end
end

-- Function to get the closest player
local function getClosestPlayer()
    local closestDistance = math.huge
    local closestPlayer = nil

    for _, target in pairs(game.Players:GetPlayers()) do
        if target ~= player and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (target.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
            if distance < closestDistance then
                closestDistance = distance
                closestPlayer = target
            end
        end
    end
    return closestPlayer
end

-- Function to aim at the target with Lerp Smoothness
local function aimAt(target)
    if not target then return end

    local targetPart = target.Character:FindFirstChild(getgenv().AimPart)
    if targetPart then
        local aimPosition = targetPart.Position + Vector3.new(getgenv().PredictionX, getgenv().PredictionY, 0)
        -- Lerp for smooth camera movement
        local smoothAim = camera.CFrame:Lerp(CFrame.new(camera.CFrame.Position, aimPosition), 1 / getgenv().Smoothness)
        camera.CFrame = smoothAim
    end
end

-- Function for airshot detection
local function isAirshot(target)
    if not target then return false end

    local humanoid = target.Character:FindFirstChild("Humanoid")
    if humanoid and humanoid.FloorMaterial == Enum.Material.Air then
        return true
    end
    return false
end

-- Function to check KO (Health <= 1) state
local function isKo(target)
    if not target then return false end

    local humanoid = target.Character:FindFirstChild("Humanoid")
    if humanoid and humanoid.Health <= 1 then
        return true
    end
    return false
end

-- Keybind for toggling aimlock (Configurable via getgenv)
mouse.KeyDown:Connect(function(key)
    if key == getgenv().Keybind then
        if aimEnabled then
            aimEnabled = false
            lockedTarget = nil
            sendNotification("Aimlock Disabled")
        else
            lockedTarget = getClosestPlayer()
            if lockedTarget then
                aimEnabled = true
                sendNotification("Locked onto: " .. lockedTarget.Name)

                -- Check for airshot
                if getgenv().Airshot and isAirshot(lockedTarget) then
                    sendNotification("Airshot Detected!")
                end
            else
                sendNotification("No target found")
            end
        end
    end
end)

-- Aimlock loop with KO check and lerp smoothness
game:GetService("RunService").RenderStepped:Connect(function()
    if aimEnabled and lockedTarget and lockedTarget.Character and lockedTarget.Character:FindFirstChild(getgenv().AimPart) then
        -- Check for KO condition
        if getgenv().KoCheck and isKo(lockedTarget) then
            aimEnabled = false
            sendNotification("KO detected, Aimlock disabled")
            return
        end
        aimAt(lockedTarget)
    end
end)
end)

-- Execute Script Button
a:button("c tool", function()
    getgenv().keytoclick = "C"
tool = Instance.new("Tool")
tool.RequiresHandle = false
tool.Name = keytoclick
tool.Activated:connect(function()
local vim = game:service("VirtualInputManager")
vim:SendKeyEvent(true, keytoclick, false, game)
end)
tool.Parent = game.Players.LocalPlayer.Backpack

game.StarterGui:SetCore("SendNotification", {
Title = "Injected succesfully!";
Text = "nice!";
})

local player = game.Players.LocalPlayer
local RunService = game:GetService("RunService")
local espConnection

local function connectCharacterAdded()
player.CharacterAdded:Connect(onCharacterAdded)
end

connectCharacterAdded()

player.CharacterRemoving:Connect(function()
tool.Parent = game.Players.LocalPlayer.Backpack
end)
    print("Script 1 Executed!")
end)

a:button("e tool", function()
    getgenv().keytoclick = "E"
tool = Instance.new("Tool")
tool.RequiresHandle = false
tool.Name = keytoclick
tool.Activated:connect(function()
local vim = game:service("VirtualInputManager")
vim:SendKeyEvent(true, keytoclick, false, game)
end)
tool.Parent = game.Players.LocalPlayer.Backpack

game.StarterGui:SetCore("SendNotification", {
Title = "Injected succesfully!";
Text = "nice!";
})

local player = game.Players.LocalPlayer
local RunService = game:GetService("RunService")
local espConnection

local function connectCharacterAdded()
player.CharacterAdded:Connect(onCharacterAdded)
end

connectCharacterAdded()

player.CharacterRemoving:Connect(function()
tool.Parent = game.Players.LocalPlayer.Backpack
end)
    print("Script 1 Executed!")
end)

-- Execute Script Button 2
b:button("Aimlock", function()
    local configs = {
    main = {
        enabled = true,
        aimlockkey = "e",
        prediction = 0.1341, -- Prediction value
        aimpart = 'HumanoidRootPart', -- Head, UpperTorso, HumanoidRootPart, LowerTorso
        notifications = true
    }
}

local boxsettings = {
    box = {
        Showbox = true,
        boxsize = Vector3.new(5, 5, 5), -- Box Size
        markercolor = Color3.fromRGB(128, 0, 128), -- Marker Color (Purple)
        markersize = UDim2.new(0.5, 1, 2, 0.5) -- Marker Size
    }
}

local box = Instance.new("Part", game.Workspace)
box.Anchored = true
box.CanCollide = false
box.Size = boxsettings.box.boxsize
box.Transparency = 0.2
box.BrickColor = BrickColor.new(boxsettings.box.markercolor) -- Set box color

local Mouse = game.Players.LocalPlayer:GetMouse()
local Plr

function makemarker(Parent, Adornee, Color, Size, Size2)
    local billboard = Instance.new("BillboardGui", Parent)
    billboard.Name = "Creds To Vio"
    billboard.Adornee = Adornee
    billboard.Size = UDim2.new(Size, Size2, Size, Size2)
    billboard.AlwaysOnTop = true

    local frame = Instance.new("Frame", billboard)
    frame.Size = boxsettings.box.markersize
    frame.BackgroundColor3 = Color

    local corner = Instance.new("UICorner", frame)
    corner.CornerRadius = UDim.new(0.5, 0) -- Adjust corner radius as needed
    return billboard
end

function noob(player)
    local character
    repeat
        wait()
    until player.Character
    local handler = makemarker(game.Workspace, player.Character:WaitForChild(configs.main.aimpart),
        Color3.fromRGB(10, 76, 25), 0.10, 8)
    handler.Name = player.Name
    player.CharacterAdded:Connect(function(Char)
        handler.Adornee = Char:WaitForChild(configs.main.aimpart)
    end)
end

for _, player in ipairs(game.Players:GetPlayers()) do
    if player ~= game.Players.LocalPlayer then
        noob(player)
    end
end

game.Players.PlayerAdded:Connect(function(Player)
    noob(Player)
end)

Mouse.KeyDown:Connect(function(KeyPressed)
    if KeyPressed == configs.main.aimlockkey then
        if configs.main.enabled then
            configs.main.enabled = false
            if configs.main.notifications then
                Plr = FindClosestUser()
                game.StarterGui:SetCore("SendNotification", {
                    Title = "Nerverias.shhh",
                    Text = "Aimlock Disabled"
                })
                -- Hide the highlight box when disabled
                box.CFrame = CFrame.new(9999, 9999, 9999)
            end
        else
            configs.main.enabled = true
            Plr = FindClosestUser()
            if configs.main.notifications then
                game.StarterGui:SetCore("SendNotification", {
                    Title = "Nerverias.shhh",
                    Text = "Locked On: " .. (Plr and Plr.Character and Plr.Character.Humanoid.DisplayName or "No Target")
                })
            end
            -- Update box visibility based on target status
            if Plr and Plr.Character and Plr.Character:FindFirstChild(configs.main.aimpart) then
                box.CFrame = CFrame.new(Plr.Character[configs.main.aimpart].Position +
                    (Plr.Character.UpperTorso.Velocity * configs.main.prediction))
                box.Transparency = boxsettings.box.Showbox and 0.3 or 0.2
            else
                box.CFrame = CFrame.new(9999, 9999, 9999)
            end
        end
    end
end)

function FindClosestUser()
    local closestPlayer
    local shortestDistance = math.huge

    for _, player in ipairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer and player.Character and player.Character:FindFirstChild("Humanoid") and
            player.Character.Humanoid.Health > 0 and player.Character:FindFirstChild("HumanoidRootPart") then
            local pos = game:GetService("Workspace").CurrentCamera:WorldToViewportPoint(player.Character.PrimaryPart.Position)
            local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(Mouse.X, Mouse.Y)).magnitude
            if magnitude < shortestDistance then
                closestPlayer = player
                shortestDistance = magnitude
            end
        end
    end
    return closestPlayer
end

game:GetService("RunService").Stepped:Connect(function()
    if configs.main.enabled and Plr and Plr.Character and Plr.Character:FindFirstChild(configs.main.aimpart) then
        box.CFrame = CFrame.new(Plr.Character[configs.main.aimpart].Position +
            (Plr.Character.UpperTorso.Velocity * configs.main.prediction))
    else
        box.CFrame = CFrame.new(9999, 9999, 9999) -- Hide the box when no target
    end
end)

repeat
    wait()
until game:IsLoaded()

local mt = getrawmetatable(game)
local oldNamecall = mt.__namecall
setreadonly(mt, false)

mt.__namecall = newcclosure(function(...)
    local args = {...}
    if configs.main.enabled and getnamecallmethod() == "FireServer" and args[2] == "UpdateMousePos" then
        args[3] = Plr.Character[configs.main.aimpart].Position +
            (Plr.Character[configs.main.aimpart].Velocity * configs.main.prediction)
        return oldNamecall(unpack(args))
    end
    return oldNamecall(...)
end)
end)

b:input("Prediction", tostring(getgenv().PredictionX), true, function(v)
    getgenv().Prediction = tonumber(v)
    print("Prediction X set to: " .. v)
end)

c:button("fly", function()
    loadstring(game:HttpGet("https://github.com/User999191/Easy_hub/blob/main/Fly", true))()
    print("Script 1 Executed!")
end)

c:label("Speed soon")
b:label("Aimlock Section")
d:label("New Update Nerverias.shhh v0.3")
d:label("New Ui And Cam lock is diff and Aimlock is changed")
d:label("Aimlock is e keybind and camlock is c bind now!")
d:label("Protected Scripts Indeed Hit Notification")
d:label("Highlight and distance esp are here *In v0.55*")
d:label("Update was in 4:41 2024/9/6")

local notifyEnabled = false

a:button("Toggle Shoot Notification", function()
    notifyEnabled = not notifyEnabled
    game.StarterGui:SetCore("SendNotification", {
        Title = notifyEnabled and "Shoot Notification Enabled" or "Shoot Notification Disabled";
        Text = "Will notify damage dealt with health info.";
    })

    if notifyEnabled then
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local function onDamageDetected(player)
            if player.Character and player.Character:FindFirstChild("Humanoid") then
                local humanoid = player.Character:FindFirstChild("Humanoid")

                -- Detect changes in the enemy player's health
                humanoid.HealthChanged:Connect(function(newHealth)
                    if humanoid.Health < humanoid.MaxHealth then
                        local damageDealt = humanoid.MaxHealth - humanoid.Health
                        game.StarterGui:SetCore("SendNotification", {
                            Title = "Hit!";
                            Text = string.format("Damage dealt: %d | Health: %d/%d", damageDealt, math.floor(newHealth), humanoid.MaxHealth);
                            Duration = 2; -- Notification lasts for 2 seconds
                        })
                    end
                end)
            end
        end

        -- Detect whenever a player is hit
        local function onPlayerAdded(player)
            if player ~= LocalPlayer then
                onDamageDetected(player)
            end
        end

        -- Connect to existing players
        for _, player in ipairs(Players:GetPlayers()) do
            onPlayerAdded(player)
        end

        -- Connect new players that join
        Players.PlayerAdded:Connect(onPlayerAdded)
    end
end)

c:button("Auto Reload *broken*", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/User999191/Easy_hub/main/Auto%20reload"))()
end)

c:button("Auto Heal *U need reach 20 health to work*", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/User999191/Easy_hub/main/Auto%20heal"))()
end)

c:button("Auto Reload", function()
     -- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera

-- Function to create ESP for a player
local function createESP(player)
    local char = player.Character
    if not char or not char:FindFirstChild("HumanoidRootPart") then return end

    local esp = Instance.new("BillboardGui")
    esp.Name = "ESP"
    esp.Adornee = char.HumanoidRootPart
    esp.Size = UDim2.new(0, 200, 0, 100)
    esp.StudsOffset = Vector3.new(0, 3, 0)
    esp.AlwaysOnTop = true
    esp.Parent = Camera:FindFirstChildOfClass("PlayerGui")

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    frame.BackgroundTransparency = 0.5
    frame.Parent = esp

    local username = Instance.new("TextLabel")
    username.Text = player.Name
    username.Size = UDim2.new(1, 0, 0.2, 0)
    username.Position = UDim2.new(0, 0, 0, 0)
    username.TextColor3 = Color3.fromRGB(255, 255, 255)
    username.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    username.TextStrokeTransparency = 0.5
    username.Parent = frame

    local healthFrame = Instance.new("Frame")
    healthFrame.Size = UDim2.new(1, 0, 0.2, 0)
    healthFrame.Position = UDim2.new(0, 0, 0.2, 0)
    healthFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    healthFrame.BackgroundTransparency = 0.7
    healthFrame.Parent = frame

    local healthBar = Instance.new("Frame")
    healthBar.Size = UDim2.new(1, 0, 1, 0)
    healthBar.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    healthBar.BorderSizePixel = 0
    healthBar.Parent = healthFrame

    local healthText = Instance.new("TextLabel")
    healthText.Size = UDim2.new(1, 0, 1, 0)
    healthText.Position = UDim2.new(0, 0, 0, 0)
    healthText.BackgroundTransparency = 1
    healthText.TextColor3 = Color3.fromRGB(255, 255, 255)
    healthText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    healthText.TextStrokeTransparency = 0.5
    healthText.TextScaled = true
    healthText.Parent = healthFrame

    local distance = Instance.new("TextLabel")
    distance.Size = UDim2.new(1, 0, 0.2, 0)
    distance.Position = UDim2.new(0, 0, 0.4, 0)
    distance.TextColor3 = Color3.fromRGB(0, 255, 0)
    distance.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    distance.TextStrokeTransparency = 0.5
    distance.Parent = frame

    -- Update ESP every 0.5 seconds
    local function updateESP()
        while esp and esp.Parent do
            local rootPart = char:FindFirstChild("HumanoidRootPart")
            if rootPart then
                local dist = (Camera.CFrame.Position - rootPart.Position).magnitude
                distance.Text = "Distance: " .. math.floor(dist) .. " studs"
                
                if char:FindFirstChild("Humanoid") then
                    local humanoid = char.Humanoid
                    local healthPercent = humanoid.Health / humanoid.MaxHealth
                    healthBar.Size = UDim2.new(healthPercent, 0, 1, 0)
                    healthText.Text = "Health: " .. math.floor(humanoid.Health) .. "/" .. math.floor(humanoid.MaxHealth)
                end
            end
            wait(0.5)
        end
    end

    -- Start updating ESP
    coroutine.wrap(updateESP)()
end

-- Function to update ESP for all players
local function updateAllESP()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            local esp = player.Character and player.Character:FindFirstChild("ESP")
            if not esp then
                createESP(player)
            end
        end
    end
end

-- Handle player joining or leaving
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        createESP(player)
    end)
end)

Players.PlayerRemoving:Connect(function(player)
    local esp = player.Character and player.Character:FindFirstChild("ESP")
    if esp then
        esp:Destroy()
    end
end)

-- Initial setup
updateAllESP()
RunService.RenderStepped:Connect(updateAllESP)
end)
