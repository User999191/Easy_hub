-- Load the UI Library
local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/laagginq/ui-libraries/main/shit-lib/src.lua"))()

-- UI Setup
local win = lib:Create("Nerverias.shhh [Beta]","Da hood,Southwest Florida")
local a = win:tab("Camlock",true)
local b = win:tab("Aimlock",false)
local c = win:tab("Fly & Speed",false)

a:label("Camlock")

-- Smoothness Input
a:input("Smoothness", tostring(getgenv().Smoothness), true, function(v)
    getgenv().Smoothness = tonumber(v)
    print("Smoothness set to: " .. v)
end)

-- AimPart Input Textbox
a:input("AimPart", getgenv().AimPart, false, function(v)
    getgenv().AimPart = tostring(v)
    print("AimPart set to: " .. v)
end)

a:input("Prediction X", tostring(getgenv().PredictionX), true, function(v)
    getgenv().PredictionX = tonumber(v)
    print("Prediction X set to: " .. v)
end)

-- Prediction Y Input
a:input("Prediction Y", tostring(getgenv().PredictionY), true, function(v)
    getgenv().PredictionY = tonumber(v)
    print("Prediction Y set to: " .. v)
end)

-- Enable Camlock Button
a:button("Enable Camlock", function()
    if not aimEnabled then
        lockedTarget = getClosestPlayer()
        if lockedTarget then
            aimEnabled = true
            sendNotification("Locked onto: " .. lockedTarget.Name)
        else
            sendNotification("No target found")
        end
    else
        aimEnabled = false
        lockedTarget = nil
        sendNotification("Camlock Disabled")
    end
end)

-- Execute Script Button
a:button("Execute Script 1", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/scripthubekitten/qtoolv3/main/qtoolv3", true))()
    print("Script 1 Executed!")
end)

-- Execute Script Button 2
b:button("Execute Script 2", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/User999191/Easy_hub/main/Aimlock", true))()
    print("Script 2 Executed!")
end)

b:input("Prediction", tostring(getgenv().PredictionX), true, function(v)
    getgenv().Prediction = tonumber(v)
    print("Prediction X set to: " .. v)
end)

b:label("Aimlock")

-- Camlock Configuration
getgenv().AimlockEnabled = true
getgenv().AimPart = "HumanoidRootPart"  -- Default aim part
getgenv().Airshot = true
getgenv().Notification = true
getgenv().KoCheck = true
getgenv().Smoothness = 5
getgenv().PredictionX = 0.165
getgenv().PredictionY = 0.165
getgenv().Keybind = "q"

-- Services
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local camera = game.Workspace.CurrentCamera

-- Variables
local lockedTarget
local aimEnabled = false

-- Function to send notifications
local function sendNotification(message)
    if getgenv().Notification then
        game.StarterGui:SetCore("SendNotification", {
            Title = "Nerverias.shhh",
            Text = message,
            Duration = 5
        })
    end
end

-- Get the closest player
local function getClosestPlayer()
    local closestDistance = math.huge
    local closestPlayer = nil

    for _, target in pairs(game.Players:GetPlayers()) do
        if target ~= player and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (target.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
            if distance < closestDistance then
                closestDistance = distance
                closestPlayer = target
            end
        end
    end
    return closestPlayer
end

-- Aim at the target with smoothness
local function aimAt(target)
    if not target then return end

    local targetPart = target.Character:FindFirstChild(getgenv().AimPart)
    if targetPart then
        local aimPosition = targetPart.Position + Vector3.new(getgenv().PredictionX, getgenv().PredictionY, 0)
        local smoothAim = camera.CFrame:Lerp(CFrame.new(camera.CFrame.Position, aimPosition), 1 / getgenv().Smoothness)
        camera.CFrame = smoothAim
    end
end

-- Check if target is in the air (airshot)
local function isAirshot(target)
    if not target then return false end

    local humanoid = target.Character:FindFirstChild("Humanoid")
    if humanoid and humanoid.FloorMaterial == Enum.Material.Air then
        return true
    end
    return false
end

-- Check if target is KO'd
local function isKo(target)
    if not target then return false end

    local humanoid = target.Character:FindFirstChild("Humanoid")
    if humanoid and humanoid.Health <= 1 then
        return true
    end
    return false
end

-- Keybind for toggling aimlock
mouse.KeyDown:Connect(function(key)
    if key == getgenv().Keybind then
        if aimEnabled then
            aimEnabled = false
            lockedTarget = nil
            sendNotification("Aimlock Disabled")
        else
            lockedTarget = getClosestPlayer()
            if lockedTarget then
                aimEnabled = true
                sendNotification("Locked onto: " .. lockedTarget.Name)

                if getgenv().Airshot and isAirshot(lockedTarget) then
                    print("Airshot Detected!")
                end
            else
                sendNotification("No target found")
            end
        end
    end
end)

-- Aimlock loop with KO check
game:GetService("RunService").RenderStepped:Connect(function()
    if aimEnabled and lockedTarget and lockedTarget.Character and lockedTarget.Character:FindFirstChild(getgenv().AimPart) then
        if getgenv().KoCheck and isKo(lockedTarget) then
            aimEnabled = false
            print("detected")
            return
        end
        aimAt(lockedTarget)
    end
end)
