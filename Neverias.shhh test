local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Debris = game:GetService("Debris")

local LocalPlayer = Players.LocalPlayer
local Camera = Workspace.CurrentCamera
local Mouse = LocalPlayer:GetMouse()

-- Settings for AimLock, BulletTrace, Airshot, and Dot
local Settings = {
    AimLock = {
        Enabled = false,
        AimLockKey = Enum.KeyCode.Q,
        Prediction = 0.2,
        AirshotPredictionMultiplier = 1.5,
        AimPart = "HumanoidRootPart",
        NotificationDuration = 2,
        ChanceHitPrediction = 0.8,
        HighChanceThreshold = 0.9,
        HitChance = 0.7,
        Mode = "Legit" -- Default mode u can choose mode as legit ,smoothness ,vertical
    BulletTrace = {
        Enabled = true,
        Color = Color3.fromRGB(255, 0, 0),
        Thickness = 2,
        LineCount = 20,
        LineLength = 100
    },
    Airshot = {
        Enabled = true,
        BasePrediction = 0.1,
        AirshotAccuracyFactor = 1.2
    },
    DotSettings = {
        Enabled = true,
        DotColor = Color3.fromRGB(255, 0, 0),
        DotRadius = 5
    }
}

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "V12UI"
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Create Main Frame with scrolling functionality
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 300, 0, 500)
mainFrame.Position = UDim2.new(0.5, -150, 0.5, -250)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

-- Create a ScrollingFrame inside the MainFrame
local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Name = "ScrollingFrame"
scrollingFrame.Size = UDim2.new(1, -20, 1, -60)
scrollingFrame.Position = UDim2.new(0, 10, 0, 50)
scrollingFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
scrollingFrame.BorderSizePixel = 0
scrollingFrame.ScrollBarThickness = 8
scrollingFrame.Parent = mainFrame

-- Create UI elements inside ScrollingFrame
local uiElements = {}

-- Create Title
local title = Instance.new("TextLabel")
title.Name = "Title"
title.Size = UDim2.new(1, 0, 0, 40)
title.Position = UDim2.new(0, 0, 0, 0)
title.Text = "Nerverias.shhh Test"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextScaled = true
title.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
title.Parent = scrollingFrame

-- Create Mode Buttons
local modes = { "Legit", "Smooth", "Vertical" }
local buttonSpacing = 50

for i, mode in ipairs(modes) do
    local modeButton = Instance.new("TextButton")
    modeButton.Name = mode .. "Button"
    modeButton.Size = UDim2.new(0, 100, 0, 40)
    modeButton.Position = UDim2.new(0, 25, 0, buttonSpacing * i)
    modeButton.Text = mode
    modeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    modeButton.TextScaled = true
    modeButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    modeButton.Parent = scrollingFrame

    modeButton.MouseButton1Click:Connect(function()
        Settings.AimLock.Mode = mode
        modeLabel.Text = "Mode: " .. Settings.AimLock.Mode
        ApplyModeSettings(Settings.AimLock.Mode)
    end)
end

-- Create Mode Label
local modeLabel = Instance.new("TextLabel")
modeLabel.Name = "ModeLabel"
modeLabel.Size = UDim2.new(0, 200, 0, 30)
modeLabel.Position = UDim2.new(0, 25, 0, buttonSpacing * (#modes + 1))
modeLabel.Text = "Mode: " .. Settings.AimLock.Mode
modeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
modeLabel.TextScaled = true
modeLabel.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
modeLabel.Parent = scrollingFrame

-- Create TextBoxes and Labels for Settings
local settingsLabels = {
    { Name = "HitChance", Position = UDim2.new(0, 25, 0, buttonSpacing * (#modes + 2)), Text = "Hit Chance: " },
    { Name = "HighChanceThreshold", Position = UDim2.new(0, 25, 0, buttonSpacing * (#modes + 3)), Text = "High Chance Threshold: " },
    { Name = "ChanceHitPrediction", Position = UDim2.new(0, 25, 0, buttonSpacing * (#modes + 4)), Text = "Chance Hit Prediction: " },
    { Name = "AirshotPrediction", Position = UDim2.new(0, 25, 0, buttonSpacing * (#modes + 5)), Text = "Airshot Prediction: " },
    { Name = "BasePrediction", Position = UDim2.new(0, 25, 0, buttonSpacing * (#modes + 6)), Text = "Base Prediction: " },
    { Name = "AirshotAccuracyFactor", Position = UDim2.new(0, 25, 0, buttonSpacing * (#modes + 7)), Text = "Airshot Accuracy Factor: " }
}

for _, labelInfo in ipairs(settingsLabels) do
    local label = Instance.new("TextLabel")
    label.Name = labelInfo.Name .. "Label"
    label.Size = UDim2.new(0, 200, 0, 30)
    label.Position = labelInfo.Position
    label.Text = labelInfo.Text .. tostring(Settings.AimLock[labelInfo.Name] or Settings.Airshot[labelInfo.Name] or "Not Set")
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextScaled = true
    label.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    label.Parent = scrollingFrame
end

-- Create TextBoxes for user input
local textBoxes = {
    { Name = "HitChance", Position = UDim2.new(0, 200, 0, buttonSpacing * (#modes + 2)), Text = tostring(Settings.AimLock.HitChance) },
    { Name = "HighChanceThreshold", Position = UDim2.new(0, 200, 0, buttonSpacing * (#modes + 3)), Text = tostring(Settings.AimLock.HighChanceThreshold) },
    { Name = "ChanceHitPrediction", Position = UDim2.new(0, 200, 0, buttonSpacing * (#modes + 4)), Text = tostring(Settings.AimLock.ChanceHitPrediction) },
    { Name = "AirshotPrediction", Position = UDim2.new(0, 200, 0, buttonSpacing * (#modes + 5)), Text = tostring(Settings.Airshot.BasePrediction) },
    { Name = "BasePrediction", Position = UDim2.new(0, 200, 0, buttonSpacing * (#modes + 6)), Text = tostring(Settings.Airshot.BasePrediction) },
    { Name = "AirshotAccuracyFactor", Position = UDim2.new(0, 200, 0, buttonSpacing * (#modes + 7)), Text = tostring(Settings.Airshot.AirshotAccuracyFactor) }
}

for _, boxInfo in ipairs(textBoxes) do
    local textBox = Instance.new("TextBox")
    textBox.Name = boxInfo.Name .. "TextBox"
    textBox.Size = UDim2.new(0, 80, 0, 30)
    textBox.Position = boxInfo.Position
    textBox.Text = boxInfo.Text
    textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    textBox.TextScaled = true
    textBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    textBox.Parent = scrollingFrame

    textBox.Changed:Connect(function(property)
        if property == "Text" then
            local value = tonumber(textBox.Text)
            if value then
                Settings.AimLock[boxInfo.Name] = value
                Settings.Airshot[boxInfo.Name] = value
                labelInfo.Text = boxInfo.Text .. tostring(value)
            end
        end
    end)
end

-- Create Toggle Button
local toggleButton = Instance.new("TextButton")
toggleButton.Name = "ToggleButton"
toggleButton.Size = UDim2.new(0, 100, 0, 40)
toggleButton.Position = UDim2.new(0.5, -50, 0, 10)
toggleButton.Text = "Hide"
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.TextScaled = true
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 150, 150)
toggleButton.Parent = screenGui

toggleButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = not mainFrame.Visible
    toggleButton.Text = mainFrame.Visible and "Hide" or "Show"
end)

-- Create No Crash Button
local noCrashButton = Instance.new("TextButton")
noCrashButton.Name = "NoCrashButton"
noCrashButton.Size = UDim2.new(0, 100, 0, 40)
noCrashButton.Position = UDim2.new(0.5, -50, 0, 60)
noCrashButton.Text = "No Crash"
noCrashButton.TextColor3 = Color3.fromRGB(255, 255, 255)
noCrashButton.TextScaled = true
noCrashButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
noCrashButton.Parent = screenGui

noCrashButton.MouseButton1Click:Connect(function()
    -- Simulate ping reduction
    local player = Players.LocalPlayer
    local playerPing = player.PlayerGui:FindFirstChild("Ping")
    
    if playerPing and playerPing.Text and tonumber(playerPing.Text) > 250 then
        local reducedPing = math.max(190, tonumber(playerPing.Text) - 60) -- Adjust ping to be less than 250
        playerPing.Text = tostring(reducedPing)
        showNotification("Ping Adjusted", "Ping has been adjusted to " .. reducedPing .. " ms.", 2)
    end
end)

-- Apply Mode Settings Function
local function ApplyModeSettings(mode)
    if mode == "Legit" then
        Settings.AimLock.Prediction = 0.3
        Settings.AimLock.ChanceHitPrediction = 0.7
        Settings.AimLock.HighChanceThreshold = 0.8
        Settings.AimLock.HitChance = 0.5
    elseif mode == "Smooth" then
        Settings.AimLock.Prediction = 0.1
        Settings.AimLock.ChanceHitPrediction = 0.5
        Settings.AimLock.HighChanceThreshold = 0.7
        Settings.AimLock.HitChance = 0.6
    elseif mode == "Vertical" then
        Settings.AimLock.Prediction = 0.2
        Settings.AimLock.ChanceHitPrediction = 0.6
        Settings.AimLock.HighChanceThreshold = 0.7
        Settings.AimLock.HitChance = 0.7
    end

    -- Update TextBoxes
    textBoxes[1].TextBox.Text = tostring(Settings.AimLock.HitChance)
    textBoxes[2].TextBox.Text = tostring(Settings.AimLock.HighChanceThreshold)
    textBoxes[3].TextBox.Text = tostring(Settings.AimLock.ChanceHitPrediction)
    textBoxes[4].TextBox.Text = tostring(Settings.Airshot.BasePrediction)
    textBoxes[5].TextBox.Text = tostring(Settings.Airshot.BasePrediction)
    textBoxes[6].TextBox.Text = tostring(Settings.Airshot.AirshotAccuracyFactor)
end

-- Initial Application of Mode Settings
ApplyModeSettings(Settings.AimLock.Mode)

-- Add Notification Function
local function showNotification(title, text, duration)
    local notification = Instance.new("Frame")
    notification.Size = UDim2.new(0, 200, 0, 50)
    notification.Position = UDim2.new(0.5, -100, 0, 10)
    notification.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    notification.BorderSizePixel = 0
    notification.Parent = screenGui

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, 0, 0, 20)
    titleLabel.Text = title
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextScaled = true
    titleLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    titleLabel.Parent = notification

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 0, 30)
    textLabel.Position = UDim2.new(0, 0, 0.25, 0)
    textLabel.Text = text
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.TextScaled = true
    textLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    textLabel.Parent = notification

    Debris:AddItem(notification, duration)
end

-- Additional Functions for AimLock, BulletTrace, Airshot, and Dot will follow
-- Function to aim at the target with prediction and settings according to the mode
local function AimAtTarget(target)
    if target and target.Character and target.Character:FindFirstChild(Settings.AimLock.AimPart) then
        local targetPart = target.Character[Settings.AimLock.AimPart]
        local predictedPosition

        local airshotPrediction = Settings.Airshot.Enabled and CalculateAirshotPrediction(Settings.AimLock.ChanceHitPrediction) or Settings.AimLock.Prediction

        if target.Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall then
            local randomness = 0
            if Settings.AimLock.Mode == "Legit" then
                randomness = math.random() * 0.5
            end

            predictedPosition = targetPart.Position + (targetPart.Velocity * (airshotPrediction + randomness))
        else
            predictedPosition = targetPart.Position + (targetPart.Velocity * airshotPrediction)
        end

        Camera.CFrame = CFrame.new(Camera.CFrame.Position, predictedPosition)
        createLineTrace(Camera.CFrame.Position, predictedPosition)

        -- Simulate shooting based on chance hit
        if ChanceHit() then
            print("Hit at:", predictedPosition)
            -- Add actual shooting logic here
        else
            print("Missed shot at:", predictedPosition)
        end
    end
end
