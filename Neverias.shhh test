local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Debris = game:GetService("Debris")

local LocalPlayer = Players.LocalPlayer
local Camera = Workspace.CurrentCamera
local Mouse = LocalPlayer:GetMouse()

-- Settings for AimLock, BulletTrace, Airshot, and Dot
local Settings = {
    AimLock = {
        Enabled = false,
        AimLockKey = Enum.KeyCode.Q,
        Prediction = 0.2,
        AirshotPredictionMultiplier = 1.5,
        AimPart = "HumanoidRootPart",
        NotificationDuration = 2,
        ChanceHitPrediction = 0.8,
        HighChanceThreshold = 0.9,
        HitChance = 0.7
    },
    BulletTrace = {
        Enabled = true,
        Color = Color3.fromRGB(255, 0, 0),
        Thickness = 2,
        LineCount = 20,
        LineLength = 100
    },
    Airshot = {
        Enabled = true,
        BasePrediction = 0.1,
        AirshotAccuracyFactor = 1.2
    },
    DotSettings = {
        Enabled = true,
        DotColor = Color3.fromRGB(255, 0, 0),
        DotRadius = 5
    },
    Highlight = {
        Enabled = false,
        Color = Color3.fromRGB(255, 0, 0),
        OutlineColor = Color3.fromRGB(0, 0, 0),
        OutlineThickness = 2
    }
}

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "Nerverias.shhh"
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Create Main Frame with scrolling functionality
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 530, 0, 530)
mainFrame.Position = UDim2.new(0.5, -150, 0.5, -225)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

-- Create a ScrollingFrame inside the MainFrame
local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Name = "ScrollingFrame"
scrollingFrame.Size = UDim2.new(1, -20, 1, -60)
scrollingFrame.Position = UDim2.new(0, 10, 0, 50)
scrollingFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
scrollingFrame.BorderSizePixel = 0
scrollingFrame.ScrollBarThickness = 8
scrollingFrame.Parent = mainFrame

-- Create UI elements inside ScrollingFrame
local uiElements = {}

-- Create Title
local title = Instance.new("TextLabel")
title.Name = "Title"
title.Size = UDim2.new(1, 0, 0, 40)
title.Position = UDim2.new(0, 0, 0, 0)
title.Text = "Nerverias.shhh"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextScaled = true
title.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
title.Parent = scrollingFrame

-- Create TextBoxes and Labels for Settings
local settingsLabels = {
    { Name = "HitChance", Position = UDim2.new(0, 25, 0, 50), Text = "Hit Chance: " },
    { Name = "HighChanceThreshold", Position = UDim2.new(0, 25, 0, 100), Text = "High Chance Threshold: " },
    { Name = "ChanceHitPrediction", Position = UDim2.new(0, 25, 0, 150), Text = "Chance Hit Prediction: " },
    { Name = "AirshotPrediction", Position = UDim2.new(0, 25, 0, 200), Text = "Airshot Prediction: " },
    { Name = "BasePrediction", Position = UDim2.new(0, 25, 0, 250), Text = "Base Prediction: " },
    { Name = "AirshotAccuracyFactor", Position = UDim2.new(0, 25, 0, 300), Text = "Airshot Accuracy Factor: " }
}

for _, labelInfo in ipairs(settingsLabels) do
    local label = Instance.new("TextLabel")
    label.Name = labelInfo.Name .. "Label"
    label.Size = UDim2.new(0, 200, 0, 30)
    label.Position = labelInfo.Position
    label.Text = labelInfo.Text .. tostring(Settings.AimLock[labelInfo.Name] or Settings.Airshot[labelInfo.Name] or "Not Set")
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextScaled = true
    label.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    label.Parent = scrollingFrame
end

-- Create TextBoxes for user input
local textBoxes = {
    { Name = "HitChance", Position = UDim2.new(0, 200, 0, 50), Text = tostring(Settings.AimLock.HitChance) },
    { Name = "HighChanceThreshold", Position = UDim2.new(0, 200, 0, 100), Text = tostring(Settings.AimLock.HighChanceThreshold) },
    { Name = "ChanceHitPrediction", Position = UDim2.new(0, 200, 0, 150), Text = tostring(Settings.AimLock.ChanceHitPrediction) },
    { Name = "AirshotPrediction", Position = UDim2.new(0, 200, 0, 200), Text = tostring(Settings.Airshot.BasePrediction) },
    { Name = "BasePrediction", Position = UDim2.new(0, 200, 0, 250), Text = tostring(Settings.Airshot.BasePrediction) },
    { Name = "AirshotAccuracyFactor", Position = UDim2.new(0, 200, 0, 300), Text = tostring(Settings.Airshot.AirshotAccuracyFactor) }
}

for _, boxInfo in ipairs(textBoxes) do
    local textBox = Instance.new("TextBox")
    textBox.Name = boxInfo.Name .. "TextBox"
    textBox.Size = UDim2.new(0, 80, 0, 30)
    textBox.Position = boxInfo.Position
    textBox.Text = boxInfo.Text
    textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    textBox.TextScaled = true
    textBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    textBox.Parent = scrollingFrame

    -- Update settings when user types new values
    textBox.Changed:Connect(function(property)
        if property == "Text" then
            local value = tonumber(textBox.Text)
            if value then
                Settings.AimLock[boxInfo.Name] = value
                Settings.Airshot[boxInfo.Name] = value
                textBox.Parent:FindFirstChild(boxInfo.Name .. "Label").Text = boxInfo.Text .. tostring(value)
            end
        end
    end)
end

-- Create Toggle Button
local toggleButton = Instance.new("TextButton")
toggleButton.Name = "ToggleButton"
toggleButton.Size = UDim2.new(0, 100, 0, 40)
toggleButton.Position = UDim2.new(0.5, -50, 0, 10)
toggleButton.Text = "Hide"
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.TextScaled = true
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 150, 150)
toggleButton.Parent = screenGui

-- Function to toggle UI visibility
local function toggleUI()
    if mainFrame.Visible then
        local tween = createTween(mainFrame, {Size = UDim2.new(0, 450, 0, 0)}, 0.5)
        tween:Play()
        tween.Completed:Connect(function()
            mainFrame.Visible = false
        end)
        toggleButton.Text = "Show"
    else
        mainFrame.Visible = true
        local tween = createTween(mainFrame, {Size = UDim2.new(0, 450, 0, 450)}, 0.5)
        tween:Play()
        toggleButton.Text = "Hide"
    end
end

toggleButton.MouseButton1Click:Connect(toggleUI)

-- Create On and Off Buttons
local onButton = Instance.new("TextButton")
onButton.Name = "OnButton"
onButton.Size = UDim2.new(0, 120, 0, 40)
onButton.Position = UDim2.new(0, 25, 0, 350)
onButton.Text = "On"
onButton.TextColor3 = Color3.fromRGB(255, 255, 255)
onButton.TextScaled = true
onButton.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
onButton.Parent = scrollingFrame

local offButton = Instance.new("TextButton")
offButton.Name = "OffButton"
offButton.Size = UDim2.new(0, 120, 0, 40)
offButton.Position = UDim2.new(0, 150, 0, 350)
offButton.Text = "Off"
offButton.TextColor3 = Color3.fromRGB(255, 255, 255)
offButton.TextScaled = true
offButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
offButton.Parent = scrollingFrame

-- State to track aimlock
local aimlockEnabled = false

-- Function to send notification
local function sendNotification(message)
    local notification = Instance.new("TextLabel")
    notification.Size = UDim2.new(0, 200, 0, 50)
    notification.Position = UDim2.new(0.5, -100, 0.5, -25)
    notification.Text = message
    notification.TextColor3 = Color3.fromRGB(255, 255, 255)
    notification.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    notification.BackgroundTransparency = 0.5
    notification.Parent = screenGui
    Debris:AddItem(notification, Settings.AimLock.NotificationDuration)
end

-- Function to toggle aimlock
local function toggleAimlock()
    aimlockEnabled = not aimlockEnabled
    if aimlockEnabled then
        sendNotification("Aimlock Enabled")
    else
        sendNotification("Aimlock Disabled")
    end
end

-- Keybind for toggling aimlock
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Settings.AimLock.AimLockKey then
        toggleAimlock()
    end
end)

-- Function to highlight all parts except the local player's character
local function toggleHighlight()
    local highlightEnabled = false
    local highlightGroup = {}

    for _, part in ipairs(Workspace:FindPartsInRegion3(workspace.CurrentCamera.CFrame:ToWorldSpace(CFrame.new(0, 0, -500)).ToRegion3(), nil, math.huge)) do
        if part:IsA("BasePart") and part.Parent ~= LocalPlayer.Character then
            if highlightEnabled then
                local highlight = Instance.new("Highlight")
                highlight.Adornee = part
                highlight.FillColor = Settings.Highlight.Color
                highlight.OutlineColor = Settings.Highlight.OutlineColor
                highlight.OutlineThickness = Settings.Highlight.OutlineThickness
                highlight.Parent = part
                table.insert(highlightGroup, highlight)
            else
                for _, highlight in ipairs(highlightGroup) do
                    highlight:Destroy()
                end
                highlightGroup = {}
            end
        end
    end

    return highlightEnabled
end

-- Toggle Highlight Button Logic
local isHighlighting = false
onButton.MouseButton1Click:Connect(function()
    isHighlighting = not isHighlighting
    toggleHighlight()
end)

offButton.MouseButton1Click:Connect(function()
    isHighlighting = false
    toggleHighlight()
end)

-- Function to perform aimlock
local function performAimlock()
    if aimlockEnabled then
        local closestPlayer, shortestDistance = nil, math.huge
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(Settings.AimLock.AimPart) then
                local aimPart = player.Character[Settings.AimLock.AimPart]
                local screenPosition, onScreen = Camera:WorldToScreenPoint(aimPart.Position)
                if onScreen then
                    local distance = (Vector2.new(screenPosition.X, screenPosition.Y) - Mouse.Position).Magnitude
                    if distance < shortestDistance then
                        closestPlayer = player
                        shortestDistance = distance
                    end
                end
            end
        end

        if closestPlayer then
            local aimPart = closestPlayer.Character:FindFirstChild(Settings.AimLock.AimPart)
            if aimPart then
                Camera.CFrame = CFrame.new(Camera.CFrame.Position, aimPart.Position)
                if Settings.BulletTrace.Enabled then
                    local line = Instance.new("Beam")
                    line.Name = "BulletTrace"
                    line.Color = ColorSequence.new(Settings.BulletTrace.Color)
                    line.Thickness = Settings.BulletTrace.Thickness
                    line.Parent = Camera
                    line.Attachment0 = Instance.new("Attachment", Camera)
                    line.Attachment1 = Instance.new("Attachment", aimPart)
                    Debris:AddItem(line, 0.1)
                end
            end
        end
    end
end

-- Perform aimlock in RenderStepped
RunService.RenderStepped:Connect(function()
    performAimlock()
end)
