-- Configuration 
getgenv().AimlockEnabled = true
getgenv().AimPart = "HumanoidRootPart"  -- Set to HumanoidRootPart
getgenv().PredictionX = 0.165
getgenv().PredictionY = 0.165
getgenv().Smoothness = 5  -- Controls the lerp smoothness (higher = smoother)
getgenv().Airshot = true
getgenv().Notification = true
getgenv().KoCheck = true  -- Stops camlock when the target's health is 1 or below
getgenv().Keybind = "q"   -- Configurable keybind for toggling camlock

-- Services
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local camera = game.Workspace.CurrentCamera

-- Variables
local lockedTarget
local aimEnabled = false

-- Function to notify the player
local function sendNotification(message)
    if getgenv().Notification then
        game.StarterGui:SetCore("SendNotification", {
            Title = "Nerverias.shhh",
            Text = message,
            Duration = 5
        })
    end
end

-- Function to get the closest player
local function getClosestPlayer()
    local closestDistance = math.huge
    local closestPlayer = nil

    for _, target in pairs(game.Players:GetPlayers()) do
        if target ~= player and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (target.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
            if distance < closestDistance then
                closestDistance = distance
                closestPlayer = target
            end
        end
    end
    return closestPlayer
end

-- Function to aim at the target with Lerp Smoothness
local function aimAt(target)
    if not target then return end

    local targetPart = target.Character:FindFirstChild(getgenv().AimPart)
    if targetPart then
        local aimPosition = targetPart.Position + Vector3.new(getgenv().PredictionX, getgenv().PredictionY, 0)
        -- Lerp for smooth camera movement
        local smoothAim = camera.CFrame:Lerp(CFrame.new(camera.CFrame.Position, aimPosition), 1 / getgenv().Smoothness)
        camera.CFrame = smoothAim
    end
end

-- Function for airshot detection
local function isAirshot(target)
    if not target then return false end

    local humanoid = target.Character:FindFirstChild("Humanoid")
    if humanoid and humanoid.FloorMaterial == Enum.Material.Air then
        return true
    end
    return false
end

-- Function to check KO (Health <= 1) state
local function isKo(target)
    if not target then return false end

    local humanoid = target.Character:FindFirstChild("Humanoid")
    if humanoid and humanoid.Health <= 1 then
        return true
    end
    return false
end

-- Keybind for toggling aimlock (Configurable via getgenv)
mouse.KeyDown:Connect(function(key)
    if key == getgenv().Keybind then
        if aimEnabled then
            aimEnabled = false
            lockedTarget = nil
            sendNotification("Aimlock Disabled")
        else
            lockedTarget = getClosestPlayer()
            if lockedTarget then
                aimEnabled = true
                sendNotification("Locked onto: " .. lockedTarget.Name)

                -- Check for airshot
                if getgenv().Airshot and isAirshot(lockedTarget) then
                    sendNotification("Airshot Detected!")
                end
            else
                sendNotification("No target found")
            end
        end
    end
end)

-- Aimlock loop with KO check and lerp smoothness
game:GetService("RunService").RenderStepped:Connect(function()
    if aimEnabled and lockedTarget and lockedTarget.Character and lockedTarget.Character:FindFirstChild(getgenv().AimPart) then
        -- Check for KO condition
        if getgenv().KoCheck and isKo(lockedTarget) then
            aimEnabled = false
            sendNotification("KO detected, Aimlock disabled")
            return
        end
        aimAt(lockedTarget)
    end
end)
